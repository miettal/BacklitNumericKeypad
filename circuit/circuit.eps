%!PS-Adobe-3.0 EPSF-3.0
%%Creator: gEDA gschem 1.6.1-20100214-22-ga30f00b
%%CreationDate: Wed May  1 19:09:52 2013
%%Title: /home/miettal/Dropbox/Hikaru_TenKey/circuit.sch
%%Author: miettal
%%BoundingBox: 0 0 748 978
%%Orientation: Portrait
%%Pages: 1
%%Endcomments
%%BeginProlog
% Prolog for gEDA, define all the functions needed for rendering
% schematics on Postscript devices


% Draw a line from the second coordinate to the first
% x2 y2 x1 y1 width line -
/line {
    setlinewidth
    % pop off first element and moveto
    moveto
    % pop off remaining elements and draw a line segment
    lineto
    % draw it
    stroke
} bind def


% Draw a dot
% x y r dot -
/dot {
    0 360 arc fill
} bind def

% Draw a dot-dashed line, a bunch of lined segments,
% if the array element only has length two, draw a dot.
% [ [x2 y2 x1 y1] [x4 y4 x3 y3] [x5 y5] ... ] width dashed -
/width 0 def
/dashed {
    dup 2.0 div /width exch def
    setlinewidth
    % pop off each line segment and draw it as a dot or as a line
    {
	aload length 2 gt
	{ moveto lineto stroke}
	{ width dot } ifelse
    } forall
} bind def

% Draw an arc segment
% x y r ang1 ang2 width darc -
/darc {
    setlinewidth
    arc stroke
} bind def

% Draw a series of arc segment bits, if the array element only has a single
% element in it, draw a dot.
% [ [sa1 ea1] [sa2 ea2] ... ] x y r width dashedarc -
/x 0 def
/y 0 def
/dashedarc {
    dup /width exch def
    setlinewidth
    /r exch def  
    /y exch def
    /x exch def
    { aload length 1 gt
	{
	    % this element had two angles in it
	    % extract start and stop angles
	    x y r   % drop x y and r onto stack
		    % at this point we have: sa ea x y r
		    % we need                      x y r sa ea
		    % so..
	    5 -2 roll
	    % and add it to the current path, and draw it
	    arc stroke
	} {
	    % this element only had one angle in it, place a
	    % filled dot at the appropriate place
	    % compute center point of the arc using the angle
	    % that is on the top of the stack
	    dup   		% angle angle
	    cos r mul x add 	% angle x
	    exch		% x angle
	    sin r mul y add	% x y
	    width		% x y width/2
	    dot			% draw the dot
	} ifelse
    } forall

    % Now draw it
    stroke
} bind def

% Draw a box
% width height x y linethickness box -
/box {
    setlinewidth
    moveto
    exch dup 0 rlineto	 % w h, h w w 0      -- Draw bottom line
    exch 0 exch rlineto	 % h w, w h 0, w 0 h -- Draw right line 
    neg 0 rlineto	 % w, -w 0           -- Draw Top line
    closepath		 % finish and draw it
    stroke
} bind def			     

% Draw a filled box
% width height x y fbox -
/fbox {
    moveto
    exch dup 0 rlineto	
    exch 0 exch rlineto	
    neg 0 rlineto		
    closepath			
    fill			
} bind def

% Font reincoding utilities

% ISOLatin1Encoding, extended with remaining uncoded glyphs
/ISOLatin1Extended [
    /.notdef /Lslash /lslash /OE /oe /Scaron /scaron /Zcaron /zcaron
    /Ydieresis /trademark /bullet /dagger /daggerdbl /ellipsis /emdash
    /endash /fi /fl /florin /fraction /guilsinglleft /guilsinglright
    /perthousand /quotedblbase /quotedblleft /quotedblright
    /quotesinglbase /quotesingle /.notdef /.notdef /.notdef /space
    /exclam /quotedbl /numbersign /dollar /percent /ampersand
    /quoteright /parenleft /parenright /asterisk /plus /comma /minus
    /period /slash /zero /one /two /three /four /five /six /seven /eight
    /nine /colon /semicolon /less /equal /greater /question /at /A /B /C
    /D /E /F /G /H /I /J /K /L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z
    /bracketleft /backslash /bracketright /asciicircum /underscore
    /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s
    /t /u /v /w /x /y /z /braceleft /bar /braceright /asciitilde
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /dotlessi /grave /acute /circumflex
    /tilde /macron /breve /dotaccent /dieresis /.notdef /ring /cedilla
    /.notdef /hungarumlaut /ogonek /caron /space /exclamdown /cent
    /sterling /currency /yen /brokenbar /section /dieresis /copyright
    /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
    /periodcentered /cedilla /onesuperior /ordmasculine /guillemotright
    /onequarter /onehalf /threequarters /questiondown /Agrave /Aacute
    /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla /Egrave /Eacute
    /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth
    /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
    /germandbls /agrave /aacute /acircumflex /atilde /adieresis /aring
    /ae /ccedilla /egrave /eacute /ecircumflex /edieresis /igrave
    /iacute /icircumflex /idieresis /eth /ntilde /ograve /oacute
    /ocircumflex /otilde /odieresis /divide /oslash /ugrave /uacute
    /ucircumflex /udieresis /yacute /thorn /ydieresis
] def

% `new-font-name' `encoding-vector' `old-font-name' RE -
/RE {
    findfont
    dup maxlength dict begin {
        1 index /FID ne { def } { pop pop } ifelse
    } forall
    /Encoding exch def
    dup /FontName exch def
    currentdict end definefont pop
} bind def

% Text handling functions, select the font and scale it, then we need
% only to apply the appropriate transformations to get the text
% justified into the right spots.  The bad thing here is that we don't
% do any kerning, so the output may look a bit strange.

% compute the height of one character and return lly and ury
% (char) charheight lly ury
/charheight {
    gsave			% push graphics state
	newpath			% clear current path
	0 0 moveto		% Set current point
	false charpath		% get path
	flattenpath		% flatten path
	pathbbox		% stack = llx lly urx ury
	exch pop		% stack = llx lly ury
	3 -1 roll pop		% stack = lly ury
    grestore			% pop graphics state
} bind def

% compute the height of a string, one character at a time
% (string) stringheight lly ury
/lly 0.0 def
/ury 0.0 def

/stringheight {
    /lly 0.0 def			% initial value of heightmin
    /ury 0.0 def			% initial value of heightmax
    {				% work through string
	( ) dup 0 4 -1 roll put	% create one character string
	charheight		% measure it's height
	dup ury gt {		% if ury gt heightmax
	    /ury exch def	% update with new value
	} {
	    pop			% else discard ury
	} ifelse
	dup lly lt {		% if lly lt heightmin
	    /lly exch def	% update with new value
	} {
	    pop			% else discard lly
	} ifelse
    } forall
    lly ury			% Return the results
} bind def

% calculate the string width taking into account the escapes.
/mystrx 0.0 def
/mystry 0.0 def
/mystresc false def

/mystringwidth {
    /mystrx 0.0 def
    /mystry 0.0 def
    /mystresc false def
    {				% work through string
	% did we process the escape character last?
	mystresc {
	    % last character was escape
	    % handle the escape
	    % is it an _ = 95?
	    dup 95 eq {
		pop  % we don't need the character anymore
		% toggle drawing overbars
		0.0 0.0 % make it like it never happened...
	    } {
		% otherwise measure the character 
		(\\ ) dup 1 4 -1 roll put % count a \ and the character
		stringwidth
	    } ifelse
	    % and reset the flag
	    /mystresc false def
	} {
	    % last character was not escape
	    % is this escape
	    dup 92 eq {
		% yes, escape character, set flag
		/mystresc true def
		pop % drop character
		0.0 0.0 % make like this character has no width and height
	    } {
		( ) dup 0 4 -1 roll put	% create one character string
		stringwidth		% measure it's height/width
	    } ifelse
	} ifelse
	% accumulate x and y movements
	mystry add /mystry exch def
	mystrx add /mystrx exch def
    } forall
    mystrx mystry % drop results on stack
} bind def

% Render a string with overbars
%
/escaped false def
/drawoverbar false def
/fontsize 0.0 def

%string1 string2 append -
/append {
    2 copy length exch length add % find new length
    string dup % string1 string2 string string
    4 2 roll % string string string1 string2
    2 index 0 3 index
    % string string string1 string2 string 0 string1
    putinterval % string string string1 string2
    exch length exch putinterval
} bind def

% If drawoverbar is set, draw a line of the same length as the given string
% string overbarshowline -
/overbarshowline {
    % print overbar if necessary
    stringwidth pop 0
    drawoverbar {
        rlineto
        gsave stroke grestore
    } {
        rmoveto
    } ifelse
} bind def

% Draws overbars for the given string, then shows the string itself
% string overbarshow
/overbarshow {
    /overbarshowacc () def
    /overbarshowtxt () def

    gsave
    fontsize 10.0 div setlinewidth
    0 fontsize rmoveto  % move to (0,overbarheight)

    {				% work through string
	escaped {
	    % the last character was the escape
	    % handle the escape
	    % is it an _ = 95?
	    dup 95 eq {
		pop  % we don't need the character anymore
                overbarshowacc overbarshowline
                % toggle drawing overbars
		/drawoverbar drawoverbar not def

                % Append the contents off the accumulator to the text
                % string we're eventually going to show
                /overbarshowtxt overbarshowtxt overbarshowacc append def

                % clear accumulator
                /overbarshowacc () def
	    } {
                % add to accumulator
                (\\ ) dup 1 4 -1 roll put
                overbarshowacc exch append
                /overbarshowacc exch def
	    } ifelse
	    % and reset the flag
	    /escaped false def
	} {
	    % check for escape character \ = 92
	    dup 92 eq {
		% yes, escape character, set flag
		/escaped true def
		pop % drop character
	    } {
                % add to accumulator
                ( ) dup 0 4 -1 roll put
                overbarshowacc exch append
                /overbarshowacc exch def
	    } ifelse
	} ifelse
    } forall
    % Catch any leftovers
    overbarshowacc overbarshowline
    overbarshowtxt overbarshowacc append

    grestore
    show
} bind def

% 
% hcenter rjustify vcenter vjustify spacing [(line1) (line2) ... ] rot x y size text -
/stringw 0.0 def
/stringh 0.0 def
/spacing 0.0 def
/strings [ ] def
/stringtxt ( ) def
/stringcount 0 def
/rot 0.0 def

/text {
    gsave	        % save state for later
    /drawoverbar false def      % start by not drawing overbars

    dup /fontsize exch def  % save font size for corrections later
    % do font selection 
    /gEDAFont findfont
    exch scalefont
    setfont

    % set up coordinates
    translate           % move origin to given point
    rotate		% rotate so that text is drawn
    0 0 moveto
    dup length /stringcount exch def			% Get number of strings
    /strings exch def     				% save strings
    /spacing exch def
    % do we have more than 1 string to render?
    stringcount 1 eq {
	/stringtxt strings aload pop def		% get the string 
	/stringw stringtxt mystringwidth pop neg def	% get the -width
	/stringh stringtxt stringheight exch pop neg def% get the -height

	% First do vertical calculations
	% hcenter rjustify vcenter vjustify 
	% vertical justification
	{ 0 stringh rmoveto } if 
	% vertical center
	{ 0 stringh 0.3571425 mul rmoveto } if  % not 0.5, so that
						% it looks nicer
	% Then do horizontal calculations
	% right justify
	{ stringw 0 rmoveto } if
	% center
	{ stringw 2.0 div 0 rmoveto } if
	% Draw the text
	stringtxt overbarshow
    } {
	% More than one line, compute bounding box for the text

	% vertical height, don't use the actual hieght of the characters
	% assume that the user wants to make the baselines line up with two
	% text boxes placed side by side
	/stringh stringcount spacing mul neg def
	% Now figure out horizontal size, this amounts to keeping track
	% of the longest string
	/stringw 0.0 def
	strings {
	    mystringwidth pop
	    dup stringw gt {
		/stringw exch def
	    } {
		pop
	    } ifelse
	} forall
	/stringw stringw neg def 	% get the -width
	
	% First do vertical calculations
	% hcenter rjustify vcenter vjustify 
	% vertical justification
	{ 0 stringh fontsize add rmoveto } if 
	% vertical center
	{ 0 stringh 0.5 mul rmoveto } if 
	% Then do horizontal calculations
	% right justify
	{ stringw 0 rmoveto } if
	% center
	{ stringw 2.0 div 0 rmoveto } if
	% now move up to the first line and begin rendering
	0 stringcount 1 sub spacing mul rmoveto
	strings {
	    gsave		% Save starting point
	    overbarshow		% render the text
	    grestore
	    0 spacing neg rmoveto
	} forall
    } ifelse
    grestore 	% Restore old state
} bind def


%%EndProlog
%%Page: 1 1
/gEDAFont ISOLatin1Extended /Helvetica RE
2 setlinecap
0.072000 0.072000 scale
0 0 translate
1.000000 1.000000 scale
-39200 -37310 translate
gsave
45700 44900 49600 44900 10 line
49600 44900 49600 50900 10 line
49600 50900 45700 50900 10 line
45700 50900 45700 44900 10 line
46200 49600 46900 49600 10 line
46900 49600 46900 50500 10 line
46900 50500 46200 50500 10 line
46200 50500 46200 49600 10 line
47300 49600 48000 49600 10 line
48000 49600 48000 50500 10 line
48000 50500 47300 50500 10 line
47300 50500 47300 49600 10 line
48400 49600 49100 49600 10 line
49100 49600 49100 50500 10 line
49100 50500 48400 50500 10 line
48400 50500 48400 49600 10 line
46200 48300 46900 48300 10 line
46900 48300 46900 49200 10 line
46900 49200 46200 49200 10 line
46200 49200 46200 48300 10 line
47300 48300 48000 48300 10 line
48000 48300 48000 49200 10 line
48000 49200 47300 49200 10 line
47300 49200 47300 48300 10 line
48400 48300 49100 48300 10 line
49100 48300 49100 49200 10 line
49100 49200 48400 49200 10 line
48400 49200 48400 48300 10 line
46200 47000 46900 47000 10 line
46900 47000 46900 47900 10 line
46900 47900 46200 47900 10 line
46200 47900 46200 47000 10 line
47300 47000 48000 47000 10 line
48000 47000 48000 47900 10 line
48000 47900 47300 47900 10 line
47300 47900 47300 47000 10 line
48400 47000 49100 47000 10 line
49100 47000 49100 47900 10 line
49100 47900 48400 47900 10 line
48400 47900 48400 47000 10 line
gsave
false false false false 780.000000 [(1) ] 0 46400 49900 541.666687 text
grestore
gsave
false false false false 780.000000 [(2) ] 0 47500 49900 541.666687 text
grestore
46200 45700 46900 45700 10 line
46900 45700 46900 46600 10 line
46900 46600 46200 46600 10 line
46200 46600 46200 45700 10 line
47300 45700 48000 45700 10 line
48000 45700 48000 46600 10 line
48000 46600 47300 46600 10 line
47300 46600 47300 45700 10 line
48400 45700 49100 45700 10 line
49100 45700 49100 46600 10 line
49100 46600 48400 46600 10 line
48400 46600 48400 45700 10 line
gsave
false false false false 780.000000 [(3) ] 0 48600 49900 541.666687 text
grestore
gsave
false false false false 780.000000 [(4) ] 0 46400 48600 541.666687 text
grestore
gsave
false false false false 780.000000 [(5) ] 0 47500 48600 541.666687 text
grestore
gsave
false false false false 780.000000 [(6) ] 0 48600 48600 541.666687 text
grestore
gsave
false false false false 780.000000 [(7) ] 0 46400 47300 541.666687 text
grestore
gsave
false false false false 780.000000 [(8) ] 0 47500 47300 541.666687 text
grestore
gsave
false false false false 780.000000 [(9) ] 0 48600 47300 541.666687 text
grestore
gsave
false false false false 780.000000 [(*) ] 0 46400 46000 541.666687 text
grestore
gsave
false false false false 780.000000 [(0) ] 0 47500 46000 541.666687 text
grestore
gsave
false false false false 780.000000 [(#) ] 0 48600 46000 541.666687 text
grestore
gsave
false false false false 260.000000 [(R1) ] 0 45900 50000 180.555557 text
grestore
gsave
false false false false 260.000000 [(R2) ] 0 45900 48700 180.555557 text
grestore
gsave
false false false false 260.000000 [(R3) ] 0 45900 47400 180.555557 text
grestore
gsave
false false false false 260.000000 [(R4) ] 0 45900 46100 180.555557 text
grestore
gsave
false false false false 260.000000 [(C1) ] 0 46400 45500 180.555557 text
grestore
gsave
false false false false 260.000000 [(C2) ] 0 47500 45500 180.555557 text
grestore
gsave
false false false false 260.000000 [(C3) ] 0 48600 45500 180.555557 text
grestore
46100 44600 46100 44900 10 line
gsave
false false false false 260.000000 [(K) ] 90 46100 44955 180.555557 text
grestore
gsave
false true false false 260.000000 [(1) ] 90 46050 44805 180.555557 text
grestore
46500 44600 46500 44900 10 line
gsave
false false false false 260.000000 [(A) ] 90 46500 44955 180.555557 text
grestore
gsave
false true false false 260.000000 [(2) ] 90 46450 44805 180.555557 text
grestore
46900 44600 46900 44900 10 line
gsave
false false false false 260.000000 [(C2) ] 90 46900 44955 180.555557 text
grestore
gsave
false true false false 260.000000 [(3) ] 90 46850 44805 180.555557 text
grestore
47300 44600 47300 44900 10 line
gsave
false false false false 260.000000 [(R1) ] 90 47300 44955 180.555557 text
grestore
gsave
false true false false 260.000000 [(4) ] 90 47250 44805 180.555557 text
grestore
47700 44600 47700 44900 10 line
gsave
false false false false 260.000000 [(C1) ] 90 47700 44955 180.555557 text
grestore
gsave
false true false false 260.000000 [(5) ] 90 47650 44805 180.555557 text
grestore
48100 44600 48100 44900 10 line
gsave
false false false false 260.000000 [(R4) ] 90 48100 44955 180.555557 text
grestore
gsave
false true false false 260.000000 [(6) ] 90 48050 44805 180.555557 text
grestore
48500 44600 48500 44900 10 line
gsave
false false false false 260.000000 [(C3) ] 90 48500 44955 180.555557 text
grestore
gsave
false true false false 260.000000 [(7) ] 90 48450 44805 180.555557 text
grestore
48900 44600 48900 44900 10 line
gsave
false false false false 260.000000 [(R3) ] 90 48900 44955 180.555557 text
grestore
gsave
false true false false 260.000000 [(8) ] 90 48850 44805 180.555557 text
grestore
49300 44600 49300 44900 10 line
gsave
false false false false 260.000000 [(R2) ] 90 49300 44955 180.555557 text
grestore
gsave
false true false false 260.000000 [(9) ] 90 49250 44805 180.555557 text
grestore
grestore
gsave
42500 43500 42800 43500 10 line
gsave
false true false false 208.000000 [(1) ] 0 42700 43550 144.444443 text
grestore
gsave
false false false false 208.000000 [(PC6\(\\_RESET\\_\)) ] 0 42850 43500 144.444443 text
grestore
42800 38100 45100 38100 10 line
45100 38100 45100 43800 10 line
45100 43800 42800 43800 10 line
42800 43800 42800 38100 10 line
45400 38700 45100 38700 10 line
gsave
false false false false 208.000000 [(16) ] 0 45200 38750 144.444443 text
grestore
gsave
false true false false 208.000000 [(\(\\_SS\\_/OC1B\)PB2) ] 0 45050 38700 144.444443 text
grestore
45400 38300 45100 38300 10 line
gsave
false false false false 208.000000 [(15) ] 0 45200 38350 144.444443 text
grestore
gsave
false true false false 208.000000 [(\(OC1A\)PB1) ] 0 45050 38300 144.444443 text
grestore
45400 39100 45100 39100 10 line
gsave
false false false false 208.000000 [(17) ] 0 45200 39150 144.444443 text
grestore
gsave
false true false false 208.000000 [(\(MOSI\)PB3) ] 0 45050 39100 144.444443 text
grestore
45400 39500 45100 39500 10 line
gsave
false false false false 208.000000 [(18) ] 0 45200 39550 144.444443 text
grestore
gsave
false true false false 208.000000 [(\(MISO\)PB4) ] 0 45050 39500 144.444443 text
grestore
45400 39900 45100 39900 10 line
gsave
false false false false 208.000000 [(19) ] 0 45200 39950 144.444443 text
grestore
gsave
false true false false 208.000000 [(\(SCK\)PB5) ] 0 45050 39900 144.444443 text
grestore
42500 43100 42800 43100 10 line
gsave
false false false false 208.000000 [(PD0\(RXD\)) ] 0 42855 43095 144.444443 text
grestore
gsave
false true false false 208.000000 [(2) ] 0 42705 43145 144.444443 text
grestore
42500 42700 42800 42700 10 line
gsave
false false false false 208.000000 [(PD1\(TXD\)) ] 0 42855 42695 144.444443 text
grestore
gsave
false true false false 208.000000 [(3) ] 0 42705 42745 144.444443 text
grestore
42500 42300 42800 42300 10 line
gsave
false false false false 208.000000 [(PD2\(INT0\)) ] 0 42855 42295 144.444443 text
grestore
gsave
false true false false 208.000000 [(4) ] 0 42705 42345 144.444443 text
grestore
42500 41900 42800 41900 10 line
gsave
false false false false 208.000000 [(PD3\(OC2B/INT1\)) ] 0 42855 41895 144.444443 text
grestore
gsave
false true false false 208.000000 [(5) ] 0 42705 41945 144.444443 text
grestore
42500 41500 42800 41500 10 line
gsave
false false false false 208.000000 [(PD4\(XCK/T0\)) ] 0 42855 41495 144.444443 text
grestore
gsave
false true false false 208.000000 [(6) ] 0 42705 41545 144.444443 text
grestore
42500 40300 42800 40300 10 line
gsave
false false false false 208.000000 [(PB6\(XTAL1/TOSC1\)) ] 0 42855 40295 144.444443 text
grestore
gsave
false true false false 208.000000 [(9) ] 0 42705 40345 144.444443 text
grestore
42500 41100 42800 41100 10 line
gsave
false false false false 208.000000 [(VCC) ] 0 42855 41095 144.444443 text
grestore
gsave
false true false false 208.000000 [(7) ] 0 42705 41145 144.444443 text
grestore
42500 40700 42800 40700 10 line
gsave
false false false false 208.000000 [(GND) ] 0 42855 40695 144.444443 text
grestore
gsave
false true false false 208.000000 [(8) ] 0 42705 40745 144.444443 text
grestore
42500 39900 42800 39900 10 line
gsave
false false false false 208.000000 [(PB7\(XTAL2/TOSC2\)) ] 0 42855 39895 144.444443 text
grestore
gsave
false true false false 208.000000 [(10) ] 0 42705 39945 144.444443 text
grestore
45400 40300 45100 40300 10 line
gsave
false false false false 208.000000 [(20) ] 0 45200 40350 144.444443 text
grestore
gsave
false true false false 208.000000 [(AVCC) ] 0 45050 40300 144.444443 text
grestore
gsave
false false false false 260.000000 [(ATmeta168) ] 0 42825 43900 180.555557 text
grestore
42500 38700 42800 38700 10 line
gsave
false false false false 208.000000 [(PD7\(AIN1\)) ] 0 42855 38695 144.444443 text
grestore
gsave
false true false false 208.000000 [(13) ] 0 42705 38745 144.444443 text
grestore
42500 39500 42800 39500 10 line
gsave
false false false false 208.000000 [(PD5\(OC0B/T1\)) ] 0 42855 39495 144.444443 text
grestore
gsave
false true false false 208.000000 [(11) ] 0 42705 39545 144.444443 text
grestore
42500 39100 42800 39100 10 line
gsave
false false false false 208.000000 [(PD6\(OC0A/AIN0\)) ] 0 42855 39095 144.444443 text
grestore
gsave
false true false false 208.000000 [(12) ] 0 42705 39145 144.444443 text
grestore
42500 38300 42800 38300 10 line
gsave
false false false false 208.000000 [(PB0\(CLKO/ICP1\)) ] 0 42855 38295 144.444443 text
grestore
gsave
false true false false 208.000000 [(14) ] 0 42705 38345 144.444443 text
grestore
45400 41100 45100 41100 10 line
gsave
false false false false 208.000000 [(22) ] 0 45200 41150 144.444443 text
grestore
gsave
false true false false 208.000000 [(GND) ] 0 45050 41100 144.444443 text
grestore
45400 40700 45100 40700 10 line
gsave
false false false false 208.000000 [(21) ] 0 45200 40750 144.444443 text
grestore
gsave
false true false false 208.000000 [(AREF) ] 0 45050 40700 144.444443 text
grestore
45400 41500 45100 41500 10 line
gsave
false false false false 208.000000 [(23) ] 0 45200 41550 144.444443 text
grestore
gsave
false true false false 208.000000 [(\(ADC0\) PC0) ] 0 45050 41500 144.444443 text
grestore
45400 41900 45100 41900 10 line
gsave
false false false false 208.000000 [(24) ] 0 45200 41950 144.444443 text
grestore
gsave
false true false false 208.000000 [(\(ADC1\) PC1) ] 0 45050 41900 144.444443 text
grestore
45400 42300 45100 42300 10 line
gsave
false false false false 208.000000 [(25) ] 0 45200 42350 144.444443 text
grestore
gsave
false true false false 208.000000 [(\(ADC2\) PC2) ] 0 45050 42300 144.444443 text
grestore
45400 42700 45100 42700 10 line
gsave
false false false false 208.000000 [(26) ] 0 45200 42750 144.444443 text
grestore
gsave
false true false false 208.000000 [(\(ADC3\) PC3) ] 0 45050 42700 144.444443 text
grestore
45400 43100 45100 43100 10 line
gsave
false false false false 208.000000 [(27) ] 0 45200 43150 144.444443 text
grestore
gsave
false true false false 208.000000 [(\(ADC4/SDA\) PC4) ] 0 45050 43100 144.444443 text
grestore
45400 43500 45100 43500 10 line
gsave
false false false false 208.000000 [(28) ] 0 45200 43550 144.444443 text
grestore
gsave
false true false false 208.000000 [(\(ADC5/SCL\) PC5) ] 0 45050 43500 144.444443 text
grestore
grestore
gsave
false true false false 260.000000 [(U?) ] 0 45150 43900 180.555557 text
grestore
47700 44600 47700 39900 10 line
47700 39900 45400 39900 10 line
46900 44600 46900 39100 10 line
46900 39100 45400 39100 10 line
48500 44600 48500 41900 10 line
48500 41900 45400 41900 10 line
47300 44600 47300 39500 10 line
47300 39500 45400 39500 10 line
48100 44600 48100 41500 10 line
48100 41500 45400 41500 10 line
48900 44600 48900 42300 10 line
48900 42300 45400 42300 10 line
49300 44600 49300 42700 10 line
49300 42700 45400 42700 10 line
40600 44700 40300 44700 10 line
gsave
false true false false 260.000000 [(Vbus) ] 0 40245 44695 180.555557 text
grestore
gsave
false false false false 260.000000 [(1) ] 0 40395 44745 180.555557 text
grestore
40600 44300 40300 44300 10 line
gsave
false true false false 260.000000 [(D-) ] 0 40245 44295 180.555557 text
grestore
gsave
false false false false 260.000000 [(2) ] 0 40395 44345 180.555557 text
grestore
40600 43900 40300 43900 10 line
gsave
false true false false 260.000000 [(D+) ] 0 40245 43895 180.555557 text
grestore
gsave
false false false false 260.000000 [(3) ] 0 40395 43945 180.555557 text
grestore
40600 43500 40300 43500 10 line
gsave
false true false false 260.000000 [(GND) ] 0 40245 43495 180.555557 text
grestore
gsave
false false false false 260.000000 [(4) ] 0 40395 43545 180.555557 text
grestore
39200 43300 40300 43300 10 line
40300 43300 40300 45000 10 line
40300 45000 39200 45000 10 line
39200 45000 39200 43300 10 line
gsave
false false false false 780.000000 [(USB) ] 270 39400 44700 541.666687 text
grestore
gsave
46400 44000 46600 43900 10 line
46600 43900 46400 43800 10 line
46400 43800 46600 43700 10 line
46600 43700 46400 43600 10 line
46400 44000 46600 44100 10 line
46600 44100 46500 44150 10 line
46500 44300 46500 44150 10 line
46500 43400 46500 43552 10 line
46400 43601 46500 43550 10 line
grestore
gsave
false false false false 260.000000 [(75) ] 90 46300 43800 180.555557 text
grestore
gsave
40900 43300 40900 43500 10 line
40800 43300 41000 43300 10 line
40855 43250 40945 43250 10 line
40880 43210 40920 43210 10 line
grestore
gsave
42100 40500 42100 40700 10 line
42000 40500 42200 40500 10 line
42055 40450 42145 40450 10 line
42080 40410 42120 40410 10 line
grestore
gsave
45800 40900 45800 41100 10 line
45700 40900 45900 40900 10 line
45755 40850 45845 40850 10 line
45780 40810 45820 40810 10 line
grestore
gsave
46100 44100 46100 44300 10 line
46000 44100 46200 44100 10 line
46055 44050 46145 44050 10 line
46080 44010 46120 44010 10 line
grestore
46100 44300 46100 44600 10 line
46500 43400 46500 43100 10 line
46500 44300 46500 44600 10 line
gsave
42300 43200 41900 43200 10 line
42300 43200 42100 42900 10 line
42100 42900 41900 43200 10 line
42300 42900 41900 42900 10 line
42100 43500 42100 43300 10 line
42100 42600 42100 42800 10 line
42100 42800 42100 42900 10 line
42100 43200 42100 43300 10 line
grestore
gsave
42300 44100 41900 44100 10 line
42300 44100 42100 43800 10 line
42100 43800 41900 44100 10 line
42300 43800 41900 43800 10 line
42100 44400 42100 44200 10 line
42100 43500 42100 43700 10 line
42100 43700 42100 43800 10 line
42100 44100 42100 44200 10 line
grestore
42500 40700 42100 40700 10 line
45400 41100 45800 41100 10 line
42100 42600 42100 41100 10 line
42100 41100 42500 41100 10 line
gsave
41600 43200 41800 43100 10 line
41800 43100 41600 43000 10 line
41600 43000 41800 42900 10 line
41800 42900 41600 42800 10 line
41600 43200 41800 43300 10 line
41800 43300 41700 43350 10 line
41700 43500 41700 43350 10 line
41700 42600 41700 42752 10 line
41600 42801 41700 42750 10 line
grestore
gsave
false false false false 260.000000 [(75) ] 90 41500 42900 180.555557 text
grestore
gsave
41200 43200 41400 43100 10 line
41400 43100 41200 43000 10 line
41200 43000 41400 42900 10 line
41400 42900 41200 42800 10 line
41200 43200 41400 43300 10 line
41400 43300 41300 43350 10 line
41300 43500 41300 43350 10 line
41300 42600 41300 42752 10 line
41200 42801 41300 42750 10 line
grestore
gsave
false false false false 260.000000 [(75) ] 90 41100 42900 180.555557 text
grestore
40600 44300 41700 44300 10 line
41700 43500 41700 44600 10 line
40600 43900 41300 43900 10 line
41300 43900 41300 43500 10 line
41700 42600 41700 41500 10 line
41700 41500 42500 41500 10 line
41300 42600 41300 42300 10 line
41300 42300 42500 42300 10 line
gsave
41600 45200 41800 45100 10 line
41800 45100 41600 45000 10 line
41600 45000 41800 44900 10 line
41800 44900 41600 44800 10 line
41600 45200 41800 45300 10 line
41800 45300 41700 45350 10 line
41700 45500 41700 45350 10 line
41700 44600 41700 44752 10 line
41600 44801 41700 44750 10 line
grestore
gsave
false false false false 260.000000 [(1k5) ] 90 41500 44900 180.555557 text
grestore
40900 43500 40600 43500 10 line
40900 44700 40900 44900 10 line
40750 44900 41050 44900 10 line
gsave
false true false true 208.000000 [(Vbus) () ] 0 41075 45050 144.444443 text
grestore
40600 44700 40900 44700 10 line
42100 44400 42100 44600 10 line
41950 44600 42250 44600 10 line
gsave
false true false true 208.000000 [(Vbus) () ] 0 42275 44750 144.444443 text
grestore
41700 45500 41700 45700 10 line
41550 45700 41850 45700 10 line
gsave
false true false true 208.000000 [(Vbus) () ] 0 41875 45850 144.444443 text
grestore
45800 43400 45800 43600 10 line
45650 43600 45950 43600 10 line
gsave
false true false true 208.000000 [(Vbus) () ] 0 45975 43750 144.444443 text
grestore
46500 43100 45800 43100 10 line
45800 43100 45800 43400 10 line
gsave
41800 39600 41800 39800 10 line
41800 40100 41800 40300 10 line
41700 39850 41900 39850 10 line
41900 39850 41900 40050 10 line
41900 40050 41700 40050 10 line
41700 40050 41700 39850 10 line
41660 39800 41940 39800 10 line
41660 40100 41940 40100 10 line
newpath
41800 39600
25
0 360 arc
fill
newpath
41800 39600
25
0 360 arc
fill
newpath
41800 40300
25
0 360 arc
fill
newpath
41800 40300
25
0 360 arc
fill
grestore
gsave
false false false false 260.000000 [(12M) ] 90 41600 39800 180.555557 text
grestore
gsave
40600 39600 40800 39600 10 line
41500 39600 41300 39600 10 line
41000 39800 41000 39400 10 line
41100 39800 41100 39400 10 line
41300 39600 41100 39600 10 line
41000 39600 40800 39600 10 line
grestore
gsave
false false false false 260.000000 [(17u) ] 0 40800 39900 180.555557 text
grestore
41500 39600 42100 39600 10 line
gsave
40600 40300 40800 40300 10 line
41500 40300 41300 40300 10 line
41000 40500 41000 40100 10 line
41100 40500 41100 40100 10 line
41300 40300 41100 40300 10 line
41000 40300 40800 40300 10 line
grestore
gsave
false false false false 260.000000 [(17u) ] 0 40800 40600 180.555557 text
grestore
41500 40300 42500 40300 10 line
gsave
40300 39400 40300 39600 10 line
40200 39400 40400 39400 10 line
40255 39350 40345 39350 10 line
40280 39310 40320 39310 10 line
grestore
40300 39600 40600 39600 10 line
40600 40300 40300 40300 10 line
40300 40300 40300 39600 10 line
42100 39600 42100 39900 10 line
42100 39900 42500 39900 10 line
41600 37600 41600 38700 10 line
42000 37900 42200 37900 10 line
42200 37900 42200 38400 10 line
42200 38400 42000 38400 10 line
42000 38400 42000 37900 10 line
42000 37900 41600 37600 10 line
42000 38400 41600 38700 10 line
42100 38700 42100 38400 10 line
42100 37600 42100 37900 10 line
42500 38700 42100 38700 10 line
gsave
42100 37400 42100 37600 10 line
42000 37400 42200 37400 10 line
42055 37350 42145 37350 10 line
42080 37310 42120 37310 10 line
grestore
newpath
41700 44300
25
0 360 arc
fill
newpath
41700 44300
25
0 360 arc
fill
newpath
41700 44300
25
0 360 arc
fill
newpath
41800 39600
25
0 360 arc
fill
newpath
41800 39600
25
0 360 arc
fill
newpath
41800 40300
25
0 360 arc
fill
newpath
41800 40300
25
0 360 arc
fill
newpath
41800 39600
25
0 360 arc
fill
newpath
41800 40300
25
0 360 arc
fill
newpath
40300 39600
25
0 360 arc
fill
newpath
40300 39600
25
0 360 arc
fill
showpage
%%End
